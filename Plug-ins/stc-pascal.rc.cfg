common.defs.msw={'size': 10, 'backcol': '#FFFFFF', 'lnsize2': 7, 'mono': 'Courier New', 'lnsize': 8, 'helv': 'Lucida Console'}
common.defs.gtk={'mono': 'Courier', 'helv': 'Helvetica', 'other': 'new century schoolbook', 'size': 9, 'lnsize': 6, 'backcol': '#FFFFFF'}
common.styleidnames = {wxSTC_STYLE_DEFAULT: 'Style default', wxSTC_STYLE_LINENUMBER: 'Line numbers', wxSTC_STYLE_BRACELIGHT: 'Matched braces', wxSTC_STYLE_BRACEBAD: 'Unmatched brace', wxSTC_STYLE_CONTROLCHAR: 'Control characters', wxSTC_STYLE_INDENTGUIDE: 'Indent guide'}

[style.pascal]
setting.pascal.-3=fore:#8080FF
setting.pascal.-2=
setting.pascal.-1=
style.pascal.000=
style.pascal.001=fore:#008040,back:#EAFFEA
style.pascal.002=fore:#008040,back:#EAFFEA,size:%(size)d
style.pascal.003=
style.pascal.004=fore:#0076AE
style.pascal.005=bold,fore:#004080
style.pascal.006=fore:#800080
style.pascal.007=fore:#800040
style.pascal.008=
style.pascal.009=fore:#808000
style.pascal.010=bold
style.pascal.011=
style.pascal.012=back:#FFD5FF
style.pascal.013=fore:#8000FF
style.pascal.032=face:%(mono)s,size:%(size)d
style.pascal.033=size:%(lnsize)s
style.pascal.034=fore:#0000FF,back:#FFFFB9,bold
style.pascal.035=fore:#FF0000,back:#FFFFB9,bold
style.pascal.036=
style.pascal.037=

[style.pascal.default]

[pascal]
displaysrc=unit Unit1;\n\ninterface\n\nuses\n  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,\n  StdCtrls;\n\ntype\n  TForm1 = class(TForm)\n    Button1: TButton;\n    procedure Button1Click(Sender: TObject);\n  private\n    { Private declarations }\n  public\n    { Public declarations }\n  end;\n\nimplementation\n\n{$R *.DFM}\n\nprocedure TForm1.Button1Click(Sender: TObject);\nconst\n  a = 10;\nvar\n  b : String;\nbegin\n  b := 'String'\nend;\n\nend.
braces={}
keywords=and array as asm begin case class const constructor destructor dispinterface div do downto else end except exports file finalization finally for function goto if implementation in inherited initialization inline interface is label library mod nil not object of or out packed procedure program property raise record repeat resourcestring set shl shr string then threadvar to try type unit until uses var while with xor private protected public published automated at on
lexer=wxSTC_LEX_PASCAL
styleidnames={wxSTC_C_DEFAULT: 'Default', wxSTC_C_COMMENT: 'Comment',wxSTC_C_COMMENTLINE: 'Comment line',wxSTC_C_COMMENTDOC: 'Comment doc',wxSTC_C_NUMBER: 'Number',wxSTC_C_WORD: 'Keyword',wxSTC_C_STRING: 'String',wxSTC_C_CHARACTER: 'Character',wxSTC_C_PREPROCESSOR: 'Preprocessor',wxSTC_C_OPERATOR: 'Operator', wxSTC_C_IDENTIFIER: 'Identifier', wxSTC_C_STRINGEOL: 'EOL unclosed string'}
