Bugs & Issues - Horribly incomplete cryptic buglist
$ - Solved/Fixed/Hacked around

--

$ Accessing a property whose property editor was edited on a previous selection of a component
$ coredumps wxPython (dang pointers)

$ Collapsing subproperty tries to store value after property editor
$ is destroyed

$After design time creating a dropping a new component the SelectionGroup gets selected
$but not the object in the inspector 

$Property editor controls sometimes sized wrong on edit

$On selecting new component in Designer, namevalue width = default, not current Inspector width

$Selecting frame offsets the SelectionGroup relative to screen coords instead of inside corners
$of frame

$ Designer sizing bug: Control returns to default size after resizing a second time 

$ Designer sizing bug: If a panel on a frame is selected and the frame is resized 
$ it is not resized to the new size of the form. This is due to the fact that the selection
$ group are 4 panels therefor there are 5 ctrls on the frame and the frame will only
$ resize the panel if it was the only control. 
$ This behaviour has to be emulated. Will be possible by looking at the child count of
$ the frame in the parents tree

$ Module does not open

$ Old problem of InspectorScrollWindows' scrollbar getting confused and not being able
$ to scroll back up

$ Cannot parse ftplib.py
$ ftplib has a funny character line 669

$wxTreeCtrl.GetParent gives problems, Robin promises fix for next release

$ Frame size/move not updating in source if frame is not currently selected in the 
$ inspector, this is a fundamentaly very tricky one to fix properly. 
$ One hack is to auto select the frame before beginning a move/size ??

$?Closing while on full parent view tree sometimes crashes python

$Second instance of a module type not showing image in AppView

$Slider not working

$ RadioBox, NoteBook does not trigger mouse events, and static box only triggers over it's
$ label. ComboBox only over drop down button
$ A work around is for containers to first do a hit test if clicks are within the region
$ of any child controls. A bit of a pain tho. Note these controls can still be selected in
$ the parents page of the inspector

$Saved as modules should notify application of path change

$Module paths are reletivised wrong when App is saved somewhere else

$ Frame loses events

$ If the last window is closed notebook does not switch to shell

$Module name not changing after rename, only after reload

$Find out why Debugger.py loads so slowly

Can't handle zero length module modules
 $ no infinite loops anymore but still problems

$ Inspector does not behave correctly when switching between 2 frame designers

$ Frame not updating position when moved

$ Add saving btns to text models

$ Parent view not behaving correctly to selection of different designers

$ Views must update model if they are modified

$ Not prompted when overwriting a file

$ Property order is random

$ OGLViews crash on closing (fixed by 2.2.0)

$ After renaming with name property selected changing components cores

$ Doesn't check if name exists before renaming

$ Deleting all utilities from DataView leaves old code in _init_utils

$ Make failure on tips file less fatal

$ Selection box jiggles when sizing from the left and top

$ Negative selections don't work

$ When there are only a few components the linked properties 
$ (MenuBar/FrameBar/ToolBar) does not show in prop editor on
$ startup. If another control is selected and the frame is selected
$ they show correctly, please someone help!

$ Having only a menubar on a frame does not link design time controls
$ Connecting a menubar to a frame generates an OnSize which generated chaos
$ I now see there is actually a reference to this in the docs

$ Deleting utils

$ ToolBars confuse the Designer (and the author).
$ Components are offset by the height of the toolbar

Toolbars still cause big trouble by moving the frame coordinates down
when linked to a frame.
The only way I can see this working is by always having the toolbar
as the first component and immediately linking it before creating any
other components (this breaks the pattern completely ouch :()
Also have to compensate for all top level controls (ctrls directly on
frame) by adjusting their coordinates upon linking of the toolbar,
because their source won't be updated.

The infamous 'After a file dialog by cursor keys don't work' bug.
This is a MAJOR pain in the neck for NT users (including myself)

Debugger causes core dump if Boa is closed while still debugging
Pressing Stop before closing prevents this. I'm trying to do this
programmatically but failing miserably

Font property misbehaves: value of font after selected != default font
Problem in general for default values

Changing sub-properties in inspector does not update ctrl

Help select search result triggers loadpage event 3 times

Attributes aren't updated in moduleparse.Class.attributes after working in the Designer
The undelying problem is that the frame designers maintain the source code
and the module is not reparsed when the designers are closed, only their changes
are applied. Attributes get picked up on parsing.

Utility control must be selected after being added

Parser must be fixed sometime to correctly parse
- methods within methods
- multiline docstrings
- method definitions continued over more than 1 line

Setting linked property to None should clear the source

Some help links break when found text is highlighted in html

Diff views crash on closing

Controls not in the wx namespace should add appropriate import 
statements to source

Event identifier duplication in source

Events sometimes added after code following class

ComboBox constructor has keyword param 'choices'

GTK
---

Many coredumps, especially on closing modules

STC is slow/sluggish, especially painful on key repeats

$ Menus can't be swapped around by wxMenuBar.Replace(), cores
$ Temp patch: ModelPage/View still maintains its own menu but it is cloned
$ before connecting to the menubar

With the accelerator table wxACCEL_ALT binds to shift key

$ AppView.modules: the path is invalid because of M$ \\'s

wxStyledTextCtrl crashes with Brace Highlighting enabled

STC being refreshed many times causes flickering.
I don't know if GTK refreshes more or that MSW just doesn't flash
that much

Toolbars don't work correctly in the designer